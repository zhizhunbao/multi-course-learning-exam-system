{
  "courseId": "cst8504",
  "title": "人工智能技术",
  "description": "人工智能核心技术和应用",
  "lastUpdated": "2025-10-16",
  "experiments": [
    {
      "id": 1,
      "title": "NumPy数组操作",
      "description": "学习NumPy库的基本数组操作和数学运算",
      "order": 1,
      "instructions": [
        "创建NumPy数组",
        "进行数组运算",
        "使用数组索引和切片",
        "实现矩阵运算",
        "处理多维数组"
      ],
      "hints": [
        "使用np.array()创建数组",
        "使用np.zeros()和np.ones()",
        "使用np.random生成随机数组",
        "使用np.dot()进行矩阵乘法"
      ],
      "template": "import numpy as np\n\n# 在这里编写你的代码\n\n# 1. 创建数组\n# arr1 = np.array([1, 2, 3, 4, 5])\n# arr2 = np.zeros((3, 4))\n# arr3 = np.random.rand(2, 3)\n\n# 2. 数组运算\n# result = arr1 * 2\n# result2 = arr1 + arr1\n\n# 3. 矩阵运算\n# matrix1 = np.array([[1, 2], [3, 4]])\n# matrix2 = np.array([[5, 6], [7, 8]])\n# product = np.dot(matrix1, matrix2)\n\n# 4. 数组统计\n# mean_val = np.mean(arr1)\n# max_val = np.max(arr1)\n\nprint('NumPy操作完成！')",
      "testCases": [
        {
          "description": "检查数组形状",
          "input": { "shape": [3, 4] },
          "expected": "数组形状: (3, 4)"
        },
        {
          "description": "检查矩阵乘法",
          "input": {
            "matrices": [
              [
                [1, 2],
                [3, 4]
              ],
              [
                [5, 6],
                [7, 8]
              ]
            ]
          },
          "expected": "结果矩阵: [[19, 22], [43, 50]]"
        }
      ]
    },
    {
      "id": 2,
      "title": "Pandas数据分析",
      "description": "使用Pandas进行数据分析和处理",
      "order": 2,
      "instructions": [
        "创建DataFrame",
        "读取和写入数据",
        "数据清洗和预处理",
        "数据分组和聚合",
        "数据可视化"
      ],
      "hints": [
        "使用pd.DataFrame()创建数据框",
        "使用pd.read_csv()读取数据",
        "使用groupby()进行分组",
        "使用matplotlib进行可视化"
      ],
      "template": "import pandas as pd\nimport matplotlib.pyplot as plt\n\n# 在这里编写你的代码\n\n# 1. 创建DataFrame\n# data = {'Name': ['Alice', 'Bob', 'Charlie'],\n#         'Age': [25, 30, 35],\n#         'City': ['New York', 'London', 'Tokyo']}\n# df = pd.DataFrame(data)\n\n# 2. 数据操作\n# df['Age_Group'] = df['Age'].apply(lambda x: 'Young' if x < 30 else 'Old')\n# grouped = df.groupby('Age_Group').mean()\n\n# 3. 数据可视化\n# df['Age'].plot(kind='hist')\n# plt.title('Age Distribution')\n# plt.show()\n\n# 4. 数据统计\n# stats = df.describe()\n\nprint('Pandas数据分析完成！')",
      "testCases": [
        {
          "description": "检查DataFrame形状",
          "input": { "rows": 3, "cols": 3 },
          "expected": "DataFrame形状: (3, 3)"
        },
        {
          "description": "检查分组结果",
          "input": {},
          "expected": "分组统计完成"
        }
      ]
    }
  ]
}