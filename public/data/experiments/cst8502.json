{
  "courseId": "cst8502",
  "title": "机器学习",
  "description": "机器学习基础理论与实践",
  "lastUpdated": "2025-10-16",
  "experiments": [
    {
      "id": 1,
      "title": "数据预处理实验",
      "description": "学习如何处理和清洗机器学习数据集",
      "order": 1,
      "instructions": [
        "加载提供的天气数据集",
        "检查数据中的缺失值",
        "处理异常值",
        "进行特征缩放",
        "保存处理后的数据"
      ],
      "hints": [
        "使用pandas读取CSV文件",
        "使用isnull()检查缺失值",
        "使用fillna()填充缺失值",
        "使用StandardScaler进行特征缩放"
      ],
      "template": "import pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler\n\n# 在这里编写你的代码\n\n# 1. 加载数据\n# df = pd.read_csv('weather1.csv')\n\n# 2. 检查缺失值\n# print(df.isnull().sum())\n\n# 3. 处理缺失值\n# df = df.fillna(df.mean())\n\n# 4. 特征缩放\n# scaler = StandardScaler()\n# df_scaled = scaler.fit_transform(df.select_dtypes(include=[np.number]))\n\nprint('数据预处理完成！')",
      "testCases": [
        {
          "description": "检查数据是否正确加载",
          "input": {},
          "expected": "数据形状: (14, 4)"
        },
        {
          "description": "检查缺失值处理",
          "input": {},
          "expected": "无缺失值"
        }
      ]
    },
    {
      "id": 2,
      "title": "k-means聚类实验",
      "description": "实现k-means聚类算法并分析结果",
      "order": 2,
      "instructions": [
        "准备聚类数据",
        "实现k-means算法",
        "选择合适的k值",
        "可视化聚类结果",
        "分析聚类质量"
      ],
      "hints": [
        "使用sklearn的KMeans",
        "使用肘部法则选择k值",
        "使用matplotlib进行可视化",
        "计算轮廓系数评估质量"
      ],
      "template": "from sklearn.cluster import KMeans\nfrom sklearn.metrics import silhouette_score\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# 在这里编写你的代码\n\n# 1. 生成示例数据\n# X = np.random.rand(100, 2)\n\n# 2. 实现k-means\n# kmeans = KMeans(n_clusters=3, random_state=42)\n# labels = kmeans.fit_predict(X)\n\n# 3. 可视化结果\n# plt.scatter(X[:, 0], X[:, 1], c=labels, cmap='viridis')\n# plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], \n#            c='red', marker='x', s=200)\n# plt.show()\n\nprint('k-means聚类完成！')",
      "testCases": [
        {
          "description": "检查聚类中心数量",
          "input": { "n_clusters": 3 },
          "expected": "3个聚类中心"
        },
        {
          "description": "检查轮廓系数",
          "input": {},
          "expected": "轮廓系数 > 0.5"
        }
      ]
    }
  ]
}